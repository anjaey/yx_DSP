<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hy.dao.mybatis.mapper.UserbasicMapper" >
  <resultMap id="BaseResultMap" type="com.hy.dao.mybatis.model.Userbasic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="BIGINT" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="isdelete" property="isdelete" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="email_sp_send_time" property="emailSpSendTime" jdbcType="BIGINT" />
    <result column="get_pwd_code" property="getPwdCode" jdbcType="VARCHAR" />
    <result column="get_pwd_outtime" property="getPwdOuttime" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userName, pwd, createTime, create_user, isdelete, type, email, email_sp_send_time, 
    get_pwd_code, get_pwd_outtime, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hy.dao.mybatis.model.UserbasicCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yx_user_basic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from yx_user_basic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from yx_user_basic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hy.dao.mybatis.model.UserbasicCriteria" >
    delete from yx_user_basic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hy.dao.mybatis.model.Userbasic" >
    insert into yx_user_basic (id, userName, pwd, 
      createTime, create_user, isdelete, 
      type, email, email_sp_send_time, 
      get_pwd_code, get_pwd_outtime, state
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=BIGINT}, #{createUser,jdbcType=INTEGER}, #{isdelete,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{emailSpSendTime,jdbcType=BIGINT}, 
      #{getPwdCode,jdbcType=VARCHAR}, #{getPwdOuttime,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}
      )
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id" >
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.hy.dao.mybatis.model.Userbasic" >
    insert into yx_user_basic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="isdelete != null" >
        isdelete,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="emailSpSendTime != null" >
        email_sp_send_time,
      </if>
      <if test="getPwdCode != null" >
        get_pwd_code,
      </if>
      <if test="getPwdOuttime != null" >
        get_pwd_outtime,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailSpSendTime != null" >
        #{emailSpSendTime,jdbcType=BIGINT},
      </if>
      <if test="getPwdCode != null" >
        #{getPwdCode,jdbcType=VARCHAR},
      </if>
      <if test="getPwdOuttime != null" >
        #{getPwdOuttime,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id" >
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.hy.dao.mybatis.model.UserbasicCriteria" resultType="java.lang.Integer" >
    select count(*) from yx_user_basic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update yx_user_basic
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null" >
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.isdelete != null" >
        isdelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.emailSpSendTime != null" >
        email_sp_send_time = #{record.emailSpSendTime,jdbcType=BIGINT},
      </if>
      <if test="record.getPwdCode != null" >
        get_pwd_code = #{record.getPwdCode,jdbcType=VARCHAR},
      </if>
      <if test="record.getPwdOuttime != null" >
        get_pwd_outtime = #{record.getPwdOuttime,jdbcType=BIGINT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update yx_user_basic
    set id = #{record.id,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=BIGINT},
      create_user = #{record.createUser,jdbcType=INTEGER},
      isdelete = #{record.isdelete,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      email_sp_send_time = #{record.emailSpSendTime,jdbcType=BIGINT},
      get_pwd_code = #{record.getPwdCode,jdbcType=VARCHAR},
      get_pwd_outtime = #{record.getPwdOuttime,jdbcType=BIGINT},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hy.dao.mybatis.model.Userbasic" >
    update yx_user_basic
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null" >
        isdelete = #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailSpSendTime != null" >
        email_sp_send_time = #{emailSpSendTime,jdbcType=BIGINT},
      </if>
      <if test="getPwdCode != null" >
        get_pwd_code = #{getPwdCode,jdbcType=VARCHAR},
      </if>
      <if test="getPwdOuttime != null" >
        get_pwd_outtime = #{getPwdOuttime,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hy.dao.mybatis.model.Userbasic" >
    update yx_user_basic
    set userName = #{username,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=INTEGER},
      isdelete = #{isdelete,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      email_sp_send_time = #{emailSpSendTime,jdbcType=BIGINT},
      get_pwd_code = #{getPwdCode,jdbcType=VARCHAR},
      get_pwd_outtime = #{getPwdOuttime,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleForOne" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yx_user_basic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>