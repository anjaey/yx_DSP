<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hy.dao.mybatis.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.hy.dao.mybatis.model.Role" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="BIGINT" />
    <result column="createUser" property="createuser" jdbcType="INTEGER" />
    <result column="nameen" property="nameen" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="data_scope" property="dataScope" jdbcType="INTEGER" />
    <result column="role_scope" property="roleScope" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, name, createTime, createUser, nameen, remark, data_scope, role_scope, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hy.dao.mybatis.model.RoleCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yx_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from yx_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from yx_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hy.dao.mybatis.model.RoleCriteria" >
    delete from yx_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hy.dao.mybatis.model.Role" >
    insert into yx_role (id, type, name, 
      createTime, createUser, nameen, 
      remark, data_scope, role_scope, 
      state)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=BIGINT}, #{createuser,jdbcType=INTEGER}, #{nameen,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{dataScope,jdbcType=INTEGER}, #{roleScope,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER})
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id" >
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.hy.dao.mybatis.model.Role" >
    insert into yx_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="createuser != null" >
        createUser,
      </if>
      <if test="nameen != null" >
        nameen,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="dataScope != null" >
        data_scope,
      </if>
      <if test="roleScope != null" >
        role_scope,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="createuser != null" >
        #{createuser,jdbcType=INTEGER},
      </if>
      <if test="nameen != null" >
        #{nameen,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="dataScope != null" >
        #{dataScope,jdbcType=INTEGER},
      </if>
      <if test="roleScope != null" >
        #{roleScope,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id" >
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.hy.dao.mybatis.model.RoleCriteria" resultType="java.lang.Integer" >
    select count(*) from yx_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update yx_role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=BIGINT},
      </if>
      <if test="record.createuser != null" >
        createUser = #{record.createuser,jdbcType=INTEGER},
      </if>
      <if test="record.nameen != null" >
        nameen = #{record.nameen,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.dataScope != null" >
        data_scope = #{record.dataScope,jdbcType=INTEGER},
      </if>
      <if test="record.roleScope != null" >
        role_scope = #{record.roleScope,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update yx_role
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=BIGINT},
      createUser = #{record.createuser,jdbcType=INTEGER},
      nameen = #{record.nameen,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      data_scope = #{record.dataScope,jdbcType=INTEGER},
      role_scope = #{record.roleScope,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hy.dao.mybatis.model.Role" >
    update yx_role
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="createuser != null" >
        createUser = #{createuser,jdbcType=INTEGER},
      </if>
      <if test="nameen != null" >
        nameen = #{nameen,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="dataScope != null" >
        data_scope = #{dataScope,jdbcType=INTEGER},
      </if>
      <if test="roleScope != null" >
        role_scope = #{roleScope,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hy.dao.mybatis.model.Role" >
    update yx_role
    set type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=BIGINT},
      createUser = #{createuser,jdbcType=INTEGER},
      nameen = #{nameen,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      data_scope = #{dataScope,jdbcType=INTEGER},
      role_scope = #{roleScope,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleForOne" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yx_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>