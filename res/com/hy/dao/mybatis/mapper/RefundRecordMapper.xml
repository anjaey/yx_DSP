<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hy.dao.mybatis.mapper.RefundRecordMapper" >
  <resultMap id="BaseResultMap" type="com.hy.dao.mybatis.model.RefundRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="advertiser_id" property="advertiserId" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="payment_way" property="paymentWay" jdbcType="INTEGER" />
    <result column="receipts_no" property="receiptsNo" jdbcType="VARCHAR" />
    <result column="payment_time" property="paymentTime" jdbcType="BIGINT" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, advertiser_id, money, reason, payment_way, receipts_no, payment_time, create_user, 
    create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hy.dao.mybatis.model.RefundRecordCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yx_refund_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from yx_refund_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from yx_refund_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hy.dao.mybatis.model.RefundRecordCriteria" >
    delete from yx_refund_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hy.dao.mybatis.model.RefundRecord" >
    insert into yx_refund_record (id, advertiser_id, money, 
      reason, payment_way, receipts_no, 
      payment_time, create_user, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{advertiserId,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL}, 
      #{reason,jdbcType=VARCHAR}, #{paymentWay,jdbcType=INTEGER}, #{receiptsNo,jdbcType=VARCHAR}, 
      #{paymentTime,jdbcType=BIGINT}, #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}
      )
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id" >
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.hy.dao.mybatis.model.RefundRecord" >
    insert into yx_refund_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="advertiserId != null" >
        advertiser_id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="paymentWay != null" >
        payment_way,
      </if>
      <if test="receiptsNo != null" >
        receipts_no,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="advertiserId != null" >
        #{advertiserId,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="paymentWay != null" >
        #{paymentWay,jdbcType=INTEGER},
      </if>
      <if test="receiptsNo != null" >
        #{receiptsNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id" >
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.hy.dao.mybatis.model.RefundRecordCriteria" resultType="java.lang.Integer" >
    select count(*) from yx_refund_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update yx_refund_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.advertiserId != null" >
        advertiser_id = #{record.advertiserId,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentWay != null" >
        payment_way = #{record.paymentWay,jdbcType=INTEGER},
      </if>
      <if test="record.receiptsNo != null" >
        receipts_no = #{record.receiptsNo,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentTime != null" >
        payment_time = #{record.paymentTime,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update yx_refund_record
    set id = #{record.id,jdbcType=INTEGER},
      advertiser_id = #{record.advertiserId,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL},
      reason = #{record.reason,jdbcType=VARCHAR},
      payment_way = #{record.paymentWay,jdbcType=INTEGER},
      receipts_no = #{record.receiptsNo,jdbcType=VARCHAR},
      payment_time = #{record.paymentTime,jdbcType=BIGINT},
      create_user = #{record.createUser,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hy.dao.mybatis.model.RefundRecord" >
    update yx_refund_record
    <set >
      <if test="advertiserId != null" >
        advertiser_id = #{advertiserId,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="paymentWay != null" >
        payment_way = #{paymentWay,jdbcType=INTEGER},
      </if>
      <if test="receiptsNo != null" >
        receipts_no = #{receiptsNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hy.dao.mybatis.model.RefundRecord" >
    update yx_refund_record
    set advertiser_id = #{advertiserId,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      reason = #{reason,jdbcType=VARCHAR},
      payment_way = #{paymentWay,jdbcType=INTEGER},
      receipts_no = #{receiptsNo,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleForOne" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yx_refund_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>